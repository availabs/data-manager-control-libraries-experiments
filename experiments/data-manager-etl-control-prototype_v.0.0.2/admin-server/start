#!/usr/bin/env node

require("ts-node").register();

const { join } = require("path");

const express = require("express");
const bodyParser = require("body-parser");

const app = express();

const EventBus = require("../src/EventBus").default;

const AggregateNpmrdsUpdateTask =
  require("../src/controllers/AggregateNpmrdsUpdateTask").default;
const NpmrdsUpdateRequest = require("../src/tasks/NpmrdsUpdateRequest").default;

app.use(bodyParser.json());

const PORT = 5566;
// const PG_ENV = "development";

const queuedUiEvents = [];

EventBus.on("ETL_CONTROL_REQUIRES_ADMIN_APPROVAL", (event) => {
  console.log(event);
  queuedUiEvents.push(event);
});

EventBus.on("ETL_PROGRESS_UPDATE", (event) => {
  console.log(event);
  queuedUiEvents.push(event);
});

app.use(function cors(req, res, next) {
  res.header("Access-Control-Allow-Origin", req.get("origin"));
  res.header("Cache-Control", "no-store,no-cache,must-revalidate");
  res.header("Access-Control-Allow-Credentials", true);
  res.header(
    "Access-Control-Allow-Headers",
    "Origin, X-Requested-With, Content-Type, Accept, Authorization"
  );

  res.header(
    "Access-Control-Allow-Methods",
    "GET,PUT,POST,DELETE,PATCH,OPTIONS"
  );

  if (req.method === "OPTIONS") {
    return res.end();
  }

  return next();
});

app.get("/", (_req, res) => res.sendFile(join(__dirname, "./index.html")));

app.post("/event", async (req, res, next) => {
  try {
    console.log(JSON.stringify(req.body, null, 4));

    if (req.body.type === "NPMRDS_UPDATE_REQUEST") {
      const task = new NpmrdsUpdateRequest(req.body);
      const controller = new AggregateNpmrdsUpdateTask(task);

      await controller.main();

      res.json({ type: "UPDATE_TASK_DONE" });
    } else if (req.body.type === "ADMIN_APPROVES_ETL_CONTROL") {
      EventBus.emit("ADMIN_APPROVES_ETL_CONTROL", req.body);
    }
  } catch (err) {
    next(err);
  }
});

app.get("/queued-ui-events", async (_req, res, next) => {
  try {
    res.json(queuedUiEvents);
    queuedUiEvents.length = 0;
  } catch (err) {
    next(err);
  }
});

app.listen(PORT, () => {
  console.log("listening on port", PORT);
  console.log(`visit the UI: http://localhost:${PORT}/`);
});

module.exports = app;
